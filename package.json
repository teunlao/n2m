{
  "name": "@n2m/root",
  "version": "1.0.0",
  "dependencies": {
    "@chakra-ui/cli": "next",
    "@chakra-ui/icons": "2.1.1",
    "@chakra-ui/react": "next",
    "@emotion/cache": "11.11.0",
    "@emotion/react": "11.11.4",
    "@farfetched/core": "0.12.4",
    "@farfetched/dev-tools": "0.12.4",
    "@farfetched/runtypes": "0.12.4",
    "@hono/node-server": "^1.12.0",
    "@loadable/component": "5.16.3",
    "@types/loadable__component": "5.13.8",
    "@types/validator": "13.11.9",
    "axios": "1.6.0",
    "clsx": "2.1.0",
    "defu": "6.1.4",
    "effector": "23.2.2",
    "effector-logger": "0.15.0",
    "effector-react": "23.2.1",
    "effector-storage": "7.1.0",
    "fast-glob": "3.3.2",
    "fastify": "4.26.2",
    "glob": "10.3.12",
    "happy-dom": "14.12.3",
    "history": "5.3.0",
    "hono": "^4.5.2",
    "nx": "18.2.2",
    "path-to-regexp": "6.2.2",
    "patronum": "2.2.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "superjson": "2.2.1",
    "uuid": "9.0.1",
    "zod": "3.23.8"
  },
  "devDependencies": {
    "@farfetched/zod": "0.12.4",
    "@n2m/eslint-config": "workspace:*",
    "@n2m/husky-config": "workspace:*",
    "@n2m/prettier-config": "workspace:*",
    "@pnpm/meta-updater": "2.0.1",
    "@testing-library/react": "15.0.2",
    "@testing-library/user-event": "14.5.2",
    "@teunlao/code-consolidator": "0.1.7",
    "@types/node": "20.14.11",
    "@types/react": "18.3.3",
    "@types/react-dom": "18.3.0",
    "@vitejs/plugin-react": "4.2.1",
    "@vitejs/plugin-react-swc": "3.6.0",
    "babel-plugin-transform-typescript-metadata": "0.3.2",
    "eslint-define-config": "2.1.0",
    "eslint-plugin-effector": "0.14.0",
    "fkill": "9.0.0",
    "fkill-cli": "8.0.0",
    "husky": "8.0.3",
    "lint-staged": "15.2.0",
    "pm2": "5.4.2",
    "rimraf": "5.0.5",
    "rollup-plugin-analyzer": "4.0.0",
    "skott": "0.33.2",
    "syncpack": "12.3.0",
    "ts-node": "10.9.2",
    "tsup": "8.0.1",
    "tsx": "4.7.0",
    "typescript": "5.5.3",
    "vite": "5.3.4",
    "vite-bundle-visualizer": "1.0.1",
    "vite-svg-loader": "4.0.0",
    "vite-tsconfig-paths": "4.3.1",
    "vitest": "2.0.4"
  },
  "overrides": {
    "@types/react": "18.3.3",
    "@types/react-dom": "18.3.0"
  },
  "prettier": "@n2m/prettier-config",
  "scripts": {
    "------------------------------------------ DEV ENTRY POINT (PM2) ---------------------------------------": "",
    "serve": "fkill pm2 :3998 :5554 :5555 :5556 -f -s && pnpm run packages:build && pm2 start ecosystem.dev.config.js --no-daemon",
    "storybook:dev": "pnpm -r --filter @n2m/storybook run storybook:dev",
    "------------------------------------------ SHARED SECTION ----------------------------------------------": "",
    "typecheck": "tsc",
    "killnode": "lsof -i -n -P | grep node | awk '{print $2}' | xargs -r kill",
    "clean": "rimraf pnpm-lock.yaml .nx node_modules apps/**/dist */**/node_modules apps/**/node_modules packages/**/dist packages-legacy/**/dist packages/**/node_modules packages-legacy/**/node_modules",
    "refresh": "pnpm run clean && pnpm install",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx,.vue",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx,.vue --fix",
    "format": "prettier . --write",
    "postinstall": "pnpm meta-updater && pnpm run packages:build",
    "syncpack:fix": "syncpack fix-mismatches",
    "packages:build": "nx run-many -t build -p \"@n2m/*\"",
    "packages:dev": "nx watch -p '@n2m/*' -- nx run \\$NX_PROJECT_NAME:build",
    "packages:serve": "pnpm run packages:build && pnpm run packages:dev",
    "test": "vitest run",
    "------------------------------------------ PROTOTYPES SECTION ----------------------------------": "",
    "prototype:serve": "pnpm run packages:build && pnpm run packages:dev & pnpm run prototype:dev",
    "prototype:dev": "pnpm -r --filter @n2m/new-app-prototype run dev",
    "prototype:debug": "pnpm -r --filter @n2m/new-app-prototype run debug",
    "prototype:build": "pnpm -r --filter @n2m/new-app-prototype run build",
    "prototype:start": "pnpm -r --filter @n2m/new-app-prototype run start",
    "prototypes:dev": "pnpm run packages:dev & nx run-many -t build -p '@0x_combotech/*' && nx watch -p '@0x_combotech/*' -- nx run \\$NX_PROJECT_NAME:build",
    "prototypes.app1:dev": "pnpm run prototypes:dev & pnpm -r --filter @0x_combotech/prototype-app-1 run dev",
    "prototypes.app2:dev": "pnpm run prototypes:dev & pnpm -r --filter @0x_combotech/prototype-app-2 run dev",
    "------------------------------------------ DOCS SECTION ----------------------------------": "",
    "docs:dev": "pnpm -r --filter @n2m/docs run dev",
    "docs:build": "pnpm -r --filter @n2m/docs run build",
    "docs:start": "pnpm -r --filter @n2m/docs run start",
    "------------------------------------------ EXAMPLES SECTION ---------------------------------": "",
    "blog:memory": "pnpm run blog:serve 2>&1 | grep \"^\\[MEMORY\\]\"",
    "blog:dev:cluster": "pm2 kill && pm2 start ec.dev.blog.config.js --no-daemon",
    "blog:dev": "pnpm -r --filter @n2m/blog-app run dev",
    "blog:serve": "fkill :5554 && pnpm run packages:serve & pnpm run blog:dev",
    "blog:build-all": "pnpm run packages:build && pnpm -r --filter @n2m/blog-app run build",
    "blog:build:prod": "pnpm run blog:build-all",
    "blog:build": "pnpm run blog:build:prod",
    "blog:build:start": "pnpm run blog:build && pnpm run blog:preview",
    "blog:start": "pnpm run blog:preview",
    "blog:preview": "pnpm -r --filter @n2m/blog-app run start",
    "blog:start:pm2": "pnpm run blog:build:prod && pm2 kill && pm2 start deploy/blog/ecu.config.js --no-daemon",
    "blog:start:mocks": "pnpm run blog:build:stage && pnpm -r --filter @n2m/blog-app run start:mocks",
    "blog:debug": "fkill :5554 && pnpm run packages:serve & pnpm -r --filter @n2m/blog-app run debug",
    "blog:debug:mocks": "fkill :5554 && pnpm run packages:serve & pnpm -r --filter @n2m/blog-app run debug:mocks",
    "blog:theme": "pnpm -r --filter @n2m/blog-app run theme",
    "blog:theme:watch": "pnpm -r --filter @n2m/blog-app run theme:watch",
    "payload:build": "pnpm -r --filter @n2m/payload run build",
    "payload:start": "pnpm -r --filter @n2m/payload run serve"
  }
}